// import React, { useState, useEffect } from "react";
// import { Link } from "react-router-dom";
// import axios from "axios";
// import "./blogs.css";

// const API_URL = "https://anstay.com.vn";
// const BLOG_API = `${API_URL}/api/admin/blog-posts`;

// const blogs = () => {
//     const [blogs, setBlogs] = useState([]);
//     const [currentPage, setCurrentPage] = useState(1);
//     const blogsPerPage = 5;

//     useEffect(() => {
//         axios
//             .get(BLOG_API)
//             .then((res) => setBlogs(res.data))
//             .catch(() => setBlogs([]));
//     }, []);
//     const publishedBlogs = blogs.filter((b) => b.status === "PUBLISHED");

//     const indexOfLastBlog = currentPage * blogsPerPage;
//     const indexOfFirstBlog = indexOfLastBlog - blogsPerPage;
//     const currentBlogs = publishedBlogs.slice(indexOfFirstBlog, indexOfLastBlog);

//     const totalPages = Math.ceil(publishedBlogs.length / blogsPerPage);

//     // X·ª≠ l√Ω ·∫£nh (th√™m domain n·∫øu c·∫ßn)
//     const getFullImageUrl = (url) => {
//         if (!url) return "https://placehold.co/400x250?text=No+Image";
//         if (url.startsWith("http")) return url;
//         return API_URL + url;
//     };

//     const paginate = (pageNumber) => setCurrentPage(pageNumber);

//     const ScrollToTop = () => {
//         window.scrollTo({ top: 0, behavior: "smooth" });
//     };

//     return (
//         <div className="blog-page">
//             <h1>Tr·∫£i Nghi·ªám Tour Du L·ªãch</h1>
//             <div className="blog-list">
//                 {currentBlogs.map((blog) => (
//                     <div key={blog.id} className="blog-card">
//                         <img
//                             src={getFullImageUrl(blog.thumbnail)}
//                             alt={blog.title}
//                             className="blog-image"
//                         />
//                         <div className="blog-content">
//                             <h2 className="blog-title">{blog.title}</h2>
//                             <div className="blog-meta">
//                                 <span>
//                                     üìÖ{" "}
//                                     {blog.createdAt
//                                         ? blog.createdAt
//                                             .split("T")[0]
//                                             .split("-")
//                                             .reverse()
//                                             .join("-")
//                                         : ""}
//                                 </span>
//                                 {/* <span>üëÅÔ∏è 0</span> */}
//                             </div>
//                             <p className="blog-description">
//                                 {blog.summary && blog.summary.trim() !== ""
//                                     ? blog.summary
//                                     : blog.content
//                                         ? blog.content.replace(/<[^>]+>/g, "").slice(0, 120) + "..."
//                                         : ""}
//                             </p>
//                             <Link to={`/blog/${blog.id}`}>
//                                 <button className="blog-button">Xem th√™m</button>
//                             </Link>
//                         </div>
//                     </div>
//                 ))}
//             </div>
//             <div className="pagination">
//                 {[...Array(totalPages)].map((_, index) => (
//                     <button
//                         key={index}
//                         onClick={() => {
//                             paginate(index + 1);
//                             ScrollToTop();
//                         }}
//                         className={currentPage === index + 1 ? "active" : ""}
//                     >
//                         {index + 1}
//                     </button>
//                 ))}
//             </div>
//         </div>
//     );
// };

// export default blogs;
import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import axios from "axios";
import "./blogs.css";

const API_URL = "https://anstay.com.vn";
const BLOG_API = `http://localhost:8080/api/v1/blog/`;

// D·ªØ li·ªáu m·∫´u khi ch∆∞a c√≥ API
const MOCK_BLOGS = [
    {
        id: 1,
        title: "Kh√°m ph√° v·∫ª ƒë·∫πp ƒê√† N·∫µng - Th√†nh ph·ªë ƒë√°ng s·ªëng",
        summary: "H√†nh tr√¨nh kh√°m ph√° nh·ªØng ƒëi·ªÉm ƒë·∫øn tuy·ªát v·ªùi t·∫°i ƒê√† N·∫µng v·ªõi nh·ªØng tr·∫£i nghi·ªám ƒë·ªôc ƒë√°o v√† ·∫©m th·ª±c phong ph√∫.",
        content: "ƒê√† N·∫µng l√† m·ªôt trong nh·ªØng th√†nh ph·ªë du l·ªãch h√†ng ƒë·∫ßu Vi·ªát Nam v·ªõi nhi·ªÅu ƒëi·ªÉm tham quan h·∫•p d·∫´n nh∆∞ B√† N√† Hills, c·∫ßu R·ªìng, b√£i bi·ªÉn M·ªπ Kh√™...",
        thumbnail: "https://images.unsplash.com/photo-1559827260-dc66d52bef19?w=400&h=250&fit=crop",
        createdAt: "2024-11-15T10:30:00Z",
        status: "PUBLISHED"
    },
    {
        id: 2,
        title: "H√† N·ªôi - Th·ªß ƒë√¥ ng√†n nƒÉm vƒÉn hi·∫øn",
        summary: "T√¨m hi·ªÉu v·ªÅ l·ªãch s·ª≠ v√† vƒÉn h√≥a H√† N·ªôi qua nh·ªØng di t√≠ch l·ªãch s·ª≠ v√† m√≥n ƒÉn truy·ªÅn th·ªëng ƒë·∫∑c s·∫Øc.",
        content: "H√† N·ªôi v·ªõi h∆°n 1000 nƒÉm l·ªãch s·ª≠ l√† n∆°i l∆∞u gi·ªØ nhi·ªÅu gi√° tr·ªã vƒÉn h√≥a truy·ªÅn th·ªëng c·ªßa d√¢n t·ªôc Vi·ªát Nam...",
        thumbnail: "https://images.unsplash.com/photo-1583417319070-4a69db38a482?w=400&h=250&fit=crop",
        createdAt: "2024-11-12T14:15:00Z",
        status: "PUBLISHED"
    },
    {
        id: 3,
        title: "Ph√∫ Qu·ªëc - ƒê·∫£o ng·ªçc c·ªßa Vi·ªát Nam",
        summary: "Kh√°m ph√° thi√™n ƒë∆∞·ªùng bi·ªÉn ƒë·∫£o Ph√∫ Qu·ªëc v·ªõi nh·ªØng b√£i bi·ªÉn tuy·ªát ƒë·∫πp v√† c√°c ho·∫°t ƒë·ªông th√∫ v·ªã.",
        content: "Ph√∫ Qu·ªëc n·ªïi ti·∫øng v·ªõi nh·ªØng b√£i bi·ªÉn trong xanh, resort sang tr·ªçng v√† c√°c ho·∫°t ƒë·ªông th·ªÉ thao d∆∞·ªõi n∆∞·ªõc h·∫•p d·∫´n...",
        thumbnail: "https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b?w=400&h=250&fit=crop",
        createdAt: "2024-11-10T09:20:00Z",
        status: "PUBLISHED"
    },
    {
        id: 4,
        title: "Sapa - Th·ªã tr·∫•n trong m√¢y",
        summary: "Tr·∫£i nghi·ªám v·∫ª ƒë·∫πp h√πng vƒ© c·ªßa n√∫i r·ª´ng Sapa v·ªõi nh·ªØng th·ª≠a ru·ªông b·∫≠c thang v√† vƒÉn h√≥a d√¢n t·ªôc ƒë·ªôc ƒë√°o.",
        content: "Sapa l√† ƒëi·ªÉm ƒë·∫øn l√Ω t∆∞·ªüng cho nh·ªØng ai y√™u th√≠ch thi√™n nhi√™n v·ªõi kh√≠ h·∫≠u m√°t m·∫ª quanh nƒÉm v√† phong c·∫£nh tuy·ªát ƒë·∫πp...",
        thumbnail: "https://images.unsplash.com/photo-1539650116574-75c0c6d73c6e?w=400&h=250&fit=crop",
        createdAt: "2024-11-08T16:45:00Z",
        status: "PUBLISHED"
    },
    {
        id: 5,
        title: "H·ªôi An - Ph·ªë c·ªï √°nh ƒë√®n l·ªìng",
        summary: "D·∫°o b∆∞·ªõc tr√™n nh·ªØng con ph·ªë c·ªï k√≠nh H·ªôi An trong √°nh s√°ng lung linh c·ªßa h√†ng ng√†n chi·∫øc ƒë√®n l·ªìng.",
        content: "H·ªôi An l√† di s·∫£n vƒÉn h√≥a th·∫ø gi·ªõi v·ªõi ki·∫øn tr√∫c c·ªï ƒë·ªôc ƒë√°o, ·∫©m th·ª±c ƒë·∫∑c s·∫Øc v√† kh√¥ng kh√≠ l√£ng m·∫°n ƒë·∫∑c bi·ªát...",
        thumbnail: "https://images.unsplash.com/photo-1555618223-378fa4e86b0e?w=400&h=250&fit=crop",
        createdAt: "2024-11-05T11:30:00Z",
        status: "PUBLISHED"
    },
    {
        id: 6,
        title: "Hu·∫ø - C·ªë ƒë√¥ ng√†n nƒÉm",
        summary: "Kh√°m ph√° nh·ªØng di t√≠ch l·ªãch s·ª≠ c·ªßa tri·ªÅu ƒë·∫°i phfeudal cu·ªëi c√πng v√† th∆∞·ªüng th·ª©c ·∫©m th·ª±c cung ƒë√¨nh tinh t·∫ø.",
        content: "Hu·∫ø v·ªõi ƒê·∫°i N·ªôi, lƒÉng t·∫©m c√°c vua tri·ªÅu Nguy·ªÖn v√† ·∫©m th·ª±c cung ƒë√¨nh ƒë·∫∑c s·∫Øc l√† ƒëi·ªÉm ƒë·∫øn kh√¥ng th·ªÉ b·ªè qua...",
        thumbnail: "https://images.unsplash.com/photo-1557804506-669a67965ba0?w=400&h=250&fit=crop",
        createdAt: "2024-11-03T13:10:00Z",
        status: "PUBLISHED"
    },
    {
        id: 7,
        title: "ƒê√† L·∫°t - Th√†nh ph·ªë m√πa xu√¢n",
        summary: "T·∫≠n h∆∞·ªüng kh√¥ng kh√≠ trong l√†nh v√† kh√°m ph√° v·∫ª ƒë·∫πp l√£ng m·∫°n c·ªßa th√†nh ph·ªë ng√†n hoa.",
        content: "ƒê√† L·∫°t n·ªïi ti·∫øng v·ªõi kh√≠ h·∫≠u m√°t m·∫ª, nh·ªØng v∆∞·ªùn hoa ƒë·∫ßy m√†u s·∫Øc v√† c√°c khu resort ngh·ªâ d∆∞·ª°ng tuy·ªát v·ªùi...",
        thumbnail: "https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?w=400&h=250&fit=crop",
        createdAt: "2024-11-01T08:25:00Z",
        status: "PUBLISHED"
    }
];

const blogs = () => {
    const [blogs, setBlogs] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [currentPage, setCurrentPage] = useState(1);
    const blogsPerPage = 5;

    useEffect(() => {
        setIsLoading(true);
        axios
            .get(BLOG_API)
            .then((res) => {
                setBlogs(res.data);
                setIsLoading(false);
            })
            .catch(() => {
                // Khi API l·ªói, s·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u
                console.log("API kh√¥ng kh·∫£ d·ª•ng, s·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u");
                setBlogs(MOCK_BLOGS);
                setIsLoading(false);
            });
    }, []);

    const publishedBlogs = blogs.filter((b) => b.status === "PUBLISHED")
      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());

    const indexOfLastBlog = currentPage * blogsPerPage;
    const indexOfFirstBlog = indexOfLastBlog - blogsPerPage;
    const currentBlogs = publishedBlogs.slice(indexOfFirstBlog, indexOfLastBlog);

    const totalPages = Math.ceil(publishedBlogs.length / blogsPerPage);

    // X·ª≠ l√Ω ·∫£nh (th√™m domain n·∫øu c·∫ßn)
    const getFullImageUrl = (url) => {
        if (!url) return "https://placehold.co/400x250?text=No+Image";
        if (url.startsWith("http")) return url;
        return API_URL + url;
    };

    const paginate = (pageNumber) => setCurrentPage(pageNumber);

    const ScrollToTop = () => {
        window.scrollTo({ top: 0, behavior: "smooth" });
    };

    // Loading state
    if (isLoading) {
        return (
            <div className="blog-page">
                <h1>Tr·∫£i Nghi·ªám Tour Du L·ªãch</h1>
                <div className="loading">
                    <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>
                </div>
            </div>
        );
    }

    // Empty state
    if (publishedBlogs.length === 0) {
        return (
            <div className="blog-page">
                <h1>Tr·∫£i Nghi·ªám Tour Du L·ªãch</h1>
                <div className="empty-state">
                    <p>Ch∆∞a c√≥ b√†i vi·∫øt n√†o ƒë∆∞·ª£c xu·∫•t b·∫£n.</p>
                </div>
            </div>
        );
    }

    return (
        <div className="blog-page">
            <h1>Tr·∫£i Nghi·ªám Tour Du L·ªãch</h1>
            <div className="blog-list">
                {currentBlogs.map((blog) => (
                    <div key={blog.id} className="blog-card">
                        <img
                            src={getFullImageUrl(blog.thumbnail) }
                            alt={blog.title}
                            className="blog-image"
                            onError={(e) => {
                                const target = e.target as HTMLImageElement;
                                target.src = "https://placehold.co/400x250?text=No+Image";
                            }}
                        />
                        <div className="blog-content">
                            <h2 className="blog-title">{blog.title}</h2>
                            <div className="blog-meta">
                                <span>
                                    üìÖ{" "}
                                    {blog.createdAt
                                        ? blog.createdAt
                                            .split("T")[0]
                                            .split("-")
                                            .reverse()
                                            .join("/")
                                        : ""}
                                </span>
                                {/* <span>üëÅÔ∏è 0</span> */}
                            </div>
                            <p className="blog-description">
                                {blog.summary && blog.summary.trim() !== ""
                                    ? blog.summary
                                    : blog.content
                                        ? blog.content.replace(/<[^>]+>/g, "").slice(0, 120) + "..."
                                        : "Kh√¥ng c√≥ m√¥ t·∫£"}
                            </p>
                            <Link to={`/blog/id/${blog.id}`}>
                                <button className="blog-button">Xem th√™m</button>
                            </Link>
                        </div>
                    </div>
                ))}
            </div>

            {/* Pagination - ch·ªâ hi·ªán khi c√≥ nhi·ªÅu h∆°n 1 trang */}
            {totalPages > 1 && (
                <div className="pagination">
                    {/* Previous button */}
                    {currentPage > 1 && (
                        <button
                            onClick={() => {
                                paginate(currentPage - 1);
                                ScrollToTop();
                            }}
                            className="pagination-arrow"
                        >
                            ‚Üê Tr∆∞·ªõc
                        </button>
                    )}

                    {/* Page numbers */}
                    {[...Array(totalPages)].map((_, index) => (
                        <button
                            key={index}
                            onClick={() => {
                                paginate(index + 1);
                                ScrollToTop();
                            }}
                            className={currentPage === index + 1 ? "active" : ""}
                        >
                            {index + 1}
                        </button>
                    ))}

                    {/* Next button */}
                    {currentPage < totalPages && (
                        <button
                            onClick={() => {
                                paginate(currentPage + 1);
                                ScrollToTop();
                            }}
                            className="pagination-arrow"
                        >
                            Sau ‚Üí
                        </button>
                    )}
                </div>
            )}
        </div>
    );
};

export default blogs;